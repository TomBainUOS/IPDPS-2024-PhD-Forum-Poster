Title: An Investigation into the Design of Many-Processor Architectures to Best Utilise the Resources of a Modern FPGA

Author: Thomas Bain (University of Southampton)

Abstract: 
Many-Processor architectures implemented using FPGA soft-cores have massive potential for improving the performance of parallel applications. Modern FPGAs provide an opportunity to scale further, due to higher resource counts and increased memory bandwidth through HBM technology. However, the many channels of HBM require a different design philosophy to exploit than traditional DDR. Similarly, stacked silicon FPGAs contain areas of reduced interconnect when crossing between chiplets that contrasts with high interconnect availability within chiplets. High speed networking and PCIe allow multiple FPGAs to form systems containing thousands of cores but add further heterogeneity. Previous work has shown high HBM utilisation can be achieved using custom streaming processing elements, however this work attempts to evaluate the suitability of purely COTS IP provided by Xilinx.

To investigate these challenges, a Many-Processor system was designed that both achieves high core counts and utilises the HBM. A maximum of 224 32bit MicroBlaze processors have been implemented on a Xilinx U280 FPGA. Every processor has a local memory and an L1 data cache. Each physical HBM AXI connection is shared by seven processors and the use of the U280â€™s hardened HBM interconnect allows all processors to access the entire HBM.

The design was evaluated using two applications: blocked dense matrix multiplication and shortest path computation of adjacency list graphs. Both applications show good initial scaling. However, there are diminishing gains as core count increases and memory contention grows. The performance of a 192 processor configuration was compared to a single Threadripper 3975WX thread and achieved relative compute times of 3.5 and 0.98, respectively. During memory intensive workloads HBM read latencies of 800ns are seen and up to 40% of execution time can be consumed by read latency. Synthetic memory benchmarks show a maximum HBM read bandwidth of 21GB/s when processors access their local channels, which is far below the maximum bandwidth of 460GB/s from all 32 channels.

The results show a functional Many-Processor FPGA system can be created using only COTS IP. However, it also exposes its weakness to best exploit the HBM memory. The MicroBlaze, with its in-order pipeline and no multi-threading, lacks any ability to hide the long latencies of HBM. A multi-threaded processor capable of hiding these latencies is a clear opportunity to improve the performance. The use of small caches with short line lengths leads to many short transactions that increase access port contention and fail to best utilise the HBM bandwidth. Using only 32 bits for data busses limits the bandwidth capacity of the access ports. Adding L2 caches or DMA based prefetchers, both utilising long burst lengths and high data widths, has potential to increase the bandwidth seen. However, the limited number of chiplet crossing lines restricts the way that data width can be increased, as the current design already consumes over 50% of those available. Future work will attempt to evaluate potential solutions and find a design structure that maximises the HBM bandwidth within the resource bounds.
